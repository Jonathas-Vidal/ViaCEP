// Generated by Dagger (https://dagger.dev).
package com.example.viacep.presenter.search;

import com.example.viacep.domain.usecase.GetAdressUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchViewModel_Factory implements Factory<SearchViewModel> {
  private final Provider<GetAdressUseCase> getAdressUseCaseProvider;

  public SearchViewModel_Factory(Provider<GetAdressUseCase> getAdressUseCaseProvider) {
    this.getAdressUseCaseProvider = getAdressUseCaseProvider;
  }

  @Override
  public SearchViewModel get() {
    return newInstance(getAdressUseCaseProvider.get());
  }

  public static SearchViewModel_Factory create(
      Provider<GetAdressUseCase> getAdressUseCaseProvider) {
    return new SearchViewModel_Factory(getAdressUseCaseProvider);
  }

  public static SearchViewModel newInstance(GetAdressUseCase getAdressUseCase) {
    return new SearchViewModel(getAdressUseCase);
  }
}
