// Generated by view binder compiler. Do not edit!
package com.example.viacep.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.viacep.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAddressBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textAddress;

  @NonNull
  public final TextView textEmptyAddress;

  @NonNull
  public final ViewFlipper viewFlipper;

  private ItemAddressBinding(@NonNull CardView rootView, @NonNull ProgressBar progressBar,
      @NonNull TextView textAddress, @NonNull TextView textEmptyAddress,
      @NonNull ViewFlipper viewFlipper) {
    this.rootView = rootView;
    this.progressBar = progressBar;
    this.textAddress = textAddress;
    this.textEmptyAddress = textEmptyAddress;
    this.viewFlipper = viewFlipper;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.text_address;
      TextView textAddress = ViewBindings.findChildViewById(rootView, id);
      if (textAddress == null) {
        break missingId;
      }

      id = R.id.text_empty_address;
      TextView textEmptyAddress = ViewBindings.findChildViewById(rootView, id);
      if (textEmptyAddress == null) {
        break missingId;
      }

      id = R.id.view_flipper;
      ViewFlipper viewFlipper = ViewBindings.findChildViewById(rootView, id);
      if (viewFlipper == null) {
        break missingId;
      }

      return new ItemAddressBinding((CardView) rootView, progressBar, textAddress, textEmptyAddress,
          viewFlipper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
